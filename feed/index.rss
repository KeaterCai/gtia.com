<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GozAtari8</title><link>http://gtia.com/</link><description></description><atom:link href="http://gtia.com/feed/index.rss" rel="self"></atom:link><lastBuildDate>Sat, 05 Mar 2016 19:33:22 +0100</lastBuildDate><item><title>I should have bought a mono VGA cable for my MegaSTE a long time ago</title><link>http://gtia.com/2016/03/05/i-should-have-bought-a-mono-vga-cable-for-my-megaste-a-long-time-ago/</link><description>&lt;p&gt;A couple of weeks ago I went in the hunt for a better monitor for my MegaSTE and ended up using my old Gateway 2000 monitor.&lt;/p&gt;
&lt;p&gt;&lt;img alt="My new setup" src="http://cdn.gtia.com/pics/2016/IMG_9686.JPG" /&gt;&lt;/p&gt;
&lt;p&gt;Don't let the GW2k name full you, this is a 15" Sony Trinitron monitor, capable of 1024x768 at 75Hz. It was a pretty sweet monitor back in 1994, and still is today.&lt;/p&gt;
&lt;p&gt;I prefer the CRT, especially since I can adjust the screen to fill it up and the lower 640x400 resolution doesn't look as blocky as it does when using an LCD. I did try out a Dell 20" 4:3 LCD that I use with my retrocomputers, but it wouldn't expand out the image to fill the screen. The Gateway monitor looks sweet anyway. &lt;/p&gt;
&lt;p&gt;With everyone moving to LCDs, I wonder if I can find a VGA CRT that will sync with the Atari models...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">mr.rcollins</dc:creator><pubDate>Sat, 05 Mar 2016 19:33:22 +0100</pubDate><guid>tag:gtia.com,2016-03-05:2016/03/05/i-should-have-bought-a-mono-vga-cable-for-my-megaste-a-long-time-ago/</guid></item><item><title>Trying to get a BBS running</title><link>http://gtia.com/2016/01/18/trying-to-get-a-bbs-running/</link><description>&lt;p&gt;Over the last few days, I've attempted to get a BBS up and going on one of my 8-bits. The original plan was to find a BBS that would run under SDX. I have an older MyIDE+Flash cart with a 256MB IDE drive which isn't being used right now, so I thought that would be good to get a BBS up on. Unfortunately, I haven't found any BBS software that supports SDX. &lt;/p&gt;
&lt;p&gt;Since I've been using an 800XL with a VBXE as my daily driver I thought I would put my Atari 800 with an Incognito installed into service running a BBS. Again, I couldn't get Carina II to run (hangs after MOE starts) or BBS Express Pro 4.0b (complains that CMDPATH.DAT isn't found, even though it is). &lt;/p&gt;
&lt;p&gt;The plan is now to take a couple of days off and approach the problem fresh.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">mr.rcollins</dc:creator><pubDate>Mon, 18 Jan 2016 20:37:00 +0100</pubDate><guid>tag:gtia.com,2016-01-18:2016/01/18/trying-to-get-a-bbs-running/</guid><category>bbs</category></item><item><title>VBXE and Ultimate 1MB success!</title><link>http://gtia.com/2015/12/29/vbxe-and-ultimate-1mb-success/</link><description>&lt;p&gt;After several hours of troubleshooting and beating on it, I'm proud to show off my successful installation of the VBXE along with an Ultimate 1M:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Success" src="http://cdn.gtia.com/pics/2015/IMG_9081-2.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;It feels weird using the 800XL on an VGA LCD screen, almost like I'm in emulation. To convert the VBXE output to VGA I'm using an GBS-8200 converter, which does a really good job of it. The monitor I'm using is a 15" Magnavox TV that is also a VGA monitor. It's nice because I can use the built in speakers for sound. I may start cruising eBay for another Dell 20" lcd though.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">mr.rcollins</dc:creator><pubDate>Tue, 29 Dec 2015 18:41:00 +0100</pubDate><guid>tag:gtia.com,2015-12-29:2015/12/29/vbxe-and-ultimate-1mb-success/</guid><category>vbxe</category><category>u1m</category></item><item><title>VBXE to GBS-8200 to VGA monitor is a success</title><link>http://gtia.com/2015/12/28/vbxe-to-gbs-8200-to-vga-monitor-is-a-success/</link><description>&lt;p&gt;After much troubleshooting, I now have VGA output from an 800XL!&lt;/p&gt;
&lt;p&gt;&lt;img alt="VBXE in Action" src="http://cdn.gtia.com/pics/2015/IMG_9078-2.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;The VBXE plugs into the 5 pin connector on the GBS-8200, which then goes out as VGA. Unfortunately, the Apple monitor doesn't have a VGA plug, so I have an adapter to convert it. Looks very good!&lt;/p&gt;
&lt;p&gt;Now to install a Ultimate 1MB and the stereo upgrade...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">mr.rcollins</dc:creator><pubDate>Mon, 28 Dec 2015 23:22:00 +0100</pubDate><guid>tag:gtia.com,2015-12-28:2015/12/28/vbxe-to-gbs-8200-to-vga-monitor-is-a-success/</guid><category>vbxe</category><category>vga</category></item><item><title>Old fashioned fun</title><link>http://gtia.com/2015/12/21/old-fashioned-fun/</link><description>&lt;p&gt;This past Friday, as a last day before break fun activity, I brought in an 800XL with some classic games. We ended up playing Castle Crisis for almost the entire time, all on a big 70" LCD TV. I was afraid the high school students would get bored with it, but they seemed to have a pretty fun time.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">gozar</dc:creator><pubDate>Mon, 21 Dec 2015 18:06:00 +0100</pubDate><guid>tag:gtia.com,2015-12-21:2015/12/21/old-fashioned-fun/</guid><category>castlecrisis</category></item><item><title>The Gozar Retro Museum</title><link>http://gtia.com/2015/07/03/the-gozar-retro-museum/</link><description>&lt;p&gt;There is an HTML5 authoring tool for OS X called Hype, which makes it
pretty easy to create interactive websites. I've got a bunch of retro
equipment, so I figured it would be cool to use Hype and create an
online museum of my stuff. So I give you:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://gtia.com/GozMuseum/GozMuseum.html"&gt;The Gozar Retro
Museum&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">gozar</dc:creator><pubDate>Fri, 03 Jul 2015 10:36:00 +0200</pubDate><guid>tag:gtia.com,2015-07-03:2015/07/03/the-gozar-retro-museum/</guid><category>museum</category></item><item><title>Learning cc65</title><link>http://gtia.com/2014/12/09/learning-cc65/</link><description>&lt;p&gt;Tonight I've taken my first plunge into finally learning cc65 and writing software for the A8. I'm attempting to convert my ten liner from the ABBUC 2014 contest over to c. Here's the first part, it redefine's the character set to be inverse:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/************************************************ &lt;/span&gt;
&lt;span class="cm"&gt; * Crack My Luggage - C version&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * My attempt to rewrite my ten liner for the&lt;/span&gt;
&lt;span class="cm"&gt; * ABBUC 2014 Ten Line competition for C, while&lt;/span&gt;
&lt;span class="cm"&gt; * learning C.&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * 12/9/2014&lt;/span&gt;
&lt;span class="cm"&gt; ************************************************/&lt;/span&gt;

&lt;span class="cp"&gt;#include &amp;lt;atari.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;conio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;peekpoke.h&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;gotoxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;cprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;crack my luggage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;cgetc&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;                    &lt;span class="c1"&gt;// Don&amp;#39;t end the program until a key is pressed&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                  &lt;span class="c1"&gt;// All done!&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;_graphics&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;POKE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;559&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                &lt;span class="c1"&gt;// Turn off screen&lt;/span&gt;
    &lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PEEK&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;106&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;POKE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;756&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// Redfine character set, make it inverse&lt;/span&gt;
        &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;127&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;PEEK&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;57344L&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;//if (a&amp;lt;0) { a=0; }&lt;/span&gt;
        &lt;span class="n"&gt;POKE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;   &lt;span class="c1"&gt;// Set space to hash pattern&lt;/span&gt;
        &lt;span class="n"&gt;POKE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
        &lt;span class="n"&gt;POKE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;127&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;PEEK&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;58016L&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;POKEW&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;708&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2710&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;            &lt;span class="c1"&gt;// Set colors&lt;/span&gt;
    &lt;span class="n"&gt;POKEW&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;710&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3868&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;POKE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;559&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;               &lt;span class="c1"&gt;// Turn screen back on&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">mr.rcollins</dc:creator><pubDate>Tue, 09 Dec 2014 13:36:00 +0100</pubDate><guid>tag:gtia.com,2014-12-09:2014/12/09/learning-cc65/</guid><category>cc65</category></item><item><title>The original Xbox is an awesome emulator machine</title><link>http://gtia.com/2014/11/15/the-xbox-is-an-awesome-emulator-machine/</link><description>&lt;p&gt;I modded my Xbox a long time ago, and over the years forgot about it, leaving the Xbox to sit on the bottom shelf. It waited patiently for years until I stumbled across a post on AtariAge about using the Xbox with emulators that piqued my interest.&lt;/p&gt;
&lt;p&gt;Upon firing up the Xbox, I was surprised that it was still functional. Well, sort of. It usually took a few tries to fire up. I installed a larger hard drive in it and grabbed AtariXLBox from &lt;a href="http://xport.xbox-scene.com/"&gt;Xport&lt;/a&gt; along with a bunch of A8 games in various formats. It was able to play all of them without a hitch. In fact, with the Xbox plugged into a CRT TV, it was pretty much indistinguishable from the real thing.&lt;/p&gt;
&lt;p&gt;I’m not a big emulation person, I’d rather be playing on the real thing, but using an Xbox has it’s advantages. For one, I can easily take it places and play several systems on it (there are emulators for all of the major consoles and arcade). It doesn’t support the multi-joy adapter from what I’ve seen, but I should be able to set up the 3rd joypad to work as the third player in Dynakillers. Lastly, it does support saving the settings on a game-by-game basis which makes it easier to start games up without worrying about what hardware the game requires.&lt;/p&gt;
&lt;p&gt;It should be relatively inexpensive to try out this route. An original Xbox usually goes for under $50 on eBay, but if you look at garage sales or Craigslist you can probably find it cheaper. You’ll need to do some research on how to mod the Xbox so you can run the emulators. This usually involves using certain games with certain save files that trick the Xbox into running unsigned code. &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">gozar</dc:creator><pubDate>Sat, 15 Nov 2014 13:45:00 +0100</pubDate><guid>tag:gtia.com,2014-11-15:2014/11/15/the-xbox-is-an-awesome-emulator-machine/</guid><category>xbox</category><category>emulation</category></item><item><title>Fired up my Colecovision Adam for the first time</title><link>http://gtia.com/2014/05/12/fired-up-my-colecovision-adam-for-the-first-time/</link><description>&lt;p&gt;At some time I picked up a Colecovision Adam (complete) with several books and datapacks. I was disappointed Donkey Kong wasn't in the box, but Donkey Kong Jr. was. As I was cleaning and arranging my basement lab, I decided I had better at least try out the Colecovision.&lt;/p&gt;
&lt;p&gt;When you first turn it on, you are put into some sort of typewriter mode. I don't have a ribbon in the printer, and the print head didn't like being turned on. Eventually, the printer stopped jamming the print head to the side, and I could type in the typewriter. I then switched it to word processing mode. Unless I'm missing something, this mode was terrible. This came out the same year as AtariWriter was released, and it doesn't even have full screen editing. I would have hated to actually use this to word process. That is, unless I'm missing something.&lt;/p&gt;
&lt;p&gt;Next up was to try out the data packs. They look like normal audio cassettes, but work like the tape back up drives I used to use at work. I put Donkey Kong into the unity, and hit the reset slider besides the cartridge port (luckily I had the manual :-). And there I was playing DK Jr! Unfortunately, while it looks good, it doesn't play very much like the original. The chomping creatures (I'm sure they have a name) move too slow. &lt;/p&gt;
&lt;p&gt;Anyway, I'm glad to have a piece of history, and will be happy to put this into my future antique electronics store!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">gozar</dc:creator><pubDate>Mon, 12 May 2014 11:56:00 +0200</pubDate><guid>tag:gtia.com,2014-05-12:2014/05/12/fired-up-my-colecovision-adam-for-the-first-time/</guid><category>colecovision</category><category>adam</category></item><item><title>Upgraded a XF551 disk drive to a 3.5" drive</title><link>http://gtia.com/2014/05/05/upgraded-a-xf551-disk-drive-to-a-35-drive/</link><description>&lt;p&gt;Back in the late 90s I purchased a large Atari collection on eBay. It's been sitting in storage, just waiting for me to dig into it. I remember I bough it for the Spartados X cartridge and R-time 8, but didn't realize everything else that was in it. I found an XF551 case which apparently had a CSS 3.5" upgrade kit installed. After stealing a 3.5" drive mechanism from an old PC, I was able to format my first 3.5" disk on my trusty Atari 800XL! (Actually, it took me 4 tries to find a disk that would format. I was using an ST to format a disk first to make sure it wasn't the upgrade causing the formatting to fail.)&lt;/p&gt;
&lt;p&gt;I really don't know what I'm going to use floppy disks for, but it is still pretty cool!&lt;/p&gt;
&lt;p&gt;&lt;img alt="My XF351!" src="http://cdn.gtia.com/2014/xf551-3.5-l.jpg" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">gozar</dc:creator><pubDate>Mon, 05 May 2014 13:03:13 +0200</pubDate><guid>tag:gtia.com,2014-05-05:2014/05/05/upgraded-a-xf551-disk-drive-to-a-35-drive/</guid><category>xf551</category><category>diskdrive</category></item><item><title>Crack My Luggage Update 1</title><link>http://gtia.com/2014/03/13/crack-my-luggage-update-1/</link><description>&lt;p&gt;In my original upload it didn't quite solve the puzzle correctly, leading to frustrating users. :-) A fixed copy is availabe &lt;a href="http://cdn.gtia.com/2014/CrackMyLuggageV1.atr"&gt;here&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">mr.rcollins</dc:creator><pubDate>Thu, 13 Mar 2014 19:04:00 +0100</pubDate><guid>tag:gtia.com,2014-03-13:2014/03/13/crack-my-luggage-update-1/</guid><category>tbxl</category><category>programming</category></item><item><title>Crack My Luggage - Turbobasic XL ten liner</title><link>http://gtia.com/2014/02/28/crack-my-luggage-turbobasic-xl-ten-liner/</link><description>&lt;p&gt;After seeing &lt;a href="http://www.newbreedsoftware.com/atari/nomam2014/minijong/"&gt;Bill Kendrick's
Minijong&lt;/a&gt; I
knew I had to go back and re-work GozMind. I stole.. I mean, borrowed,
Bill's character redefinition ideas, and replaced the symbols with the
number 1-6. The result is &lt;strong&gt;Crack My Luggage&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="CrackMyLuggage2.png (1022×686)" src="http://cdn.gtia.com/2014/CrackMyLuggage2.png" /&gt;&lt;/p&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Silly me, I've lost the code to my luggage and I'll need you to try to
crack it so I can get to my stuff! Although I can't remember the code, I
think it will look familiar as you guess. After you guess, I'll tell you
how many numbers are right and are in the correct place with the dark
pegs to the right of the code. Correct numbers but in the wrong place
will be &lt;strong&gt;O&lt;/strong&gt;s. Order of the pegs have no relationship to the code.&lt;/p&gt;
&lt;h1&gt;How to Play&lt;/h1&gt;
&lt;p&gt;You'll need a joystick plugged into joystick 1. After the game starts,
the screen will be blank for a few moments before show you the game
board. Use up or down on the joystick to select different numbers, and
the fire button to submit your guess. The game is over when you
correctly guess the code or have more than 10 tries. Pressing the fire
button will start the game over.&lt;/p&gt;
&lt;h1&gt;Get the file&lt;/h1&gt;
&lt;p&gt;A self contained &lt;a href="http://cdn.gtia.com/2014/CrackMyLuggage.atr"&gt;disk image is available,
CrackMyLuggage.atr&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">gozar</dc:creator><pubDate>Fri, 28 Feb 2014 15:22:00 +0100</pubDate><guid>tag:gtia.com,2014-02-28:2014/02/28/crack-my-luggage-turbobasic-xl-ten-liner/</guid><category>tbxl</category><category>programming</category></item><item><title>GozMind - My 10 liner for the NOMAM 2014 competition</title><link>http://gtia.com/2014/02/18/gozmind-my-10-liner-for-the-nomam-2014-competition/</link><description>&lt;p&gt;Over Christmas break I really started to get back into using my Atari
800xl. I got my MyIDE+Flash set up to work with Action! because I've
always wanted to learn it. Then I read about the &lt;a href="http://atariage.com/forums/topic/221948-basic-ten-liners-contest-2014/"&gt;BASIC Ten-Liners -
Contest
2014&lt;/a&gt;.
I had a snow day today, so I am proud to announce GozMind. It's
basically a clone of Mastermind. Unfortunately, trying to fit it into 10
lines was tough. So tough that the code to guess consists of the built in
characters, *!@#$%&amp;amp;. After you enter your guess with the controller,
pressing the fire button will have the computer tell you how you did.
An * means you have the right character in the right place. An O means
that you have the right character, it's just in the wrong place.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Gozmind Screenshot" src="http://cdn.gtia.com/gozmind/gozmind.png" /&gt;&lt;/p&gt;
&lt;p&gt;Bootable atr available here:
&lt;a href="http://cdn.gtia.com/gozmind/gozmind-v140218.atr"&gt;gozmind-v140218.atr&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Program breakdown&lt;/h1&gt;
&lt;p&gt;I'm not really happy with how the code looks. It's quite a mess. Maybe
I'll go back and refactor, but for right now it works. :-)&lt;/p&gt;
&lt;h2&gt;Line 10&lt;/h2&gt;
&lt;p&gt;&lt;img alt="10.png (640×56)" src="http://cdn.gtia.com/gozmind/10.png" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DIM C$(14): Holds the characters for the code. It also holds a
 duplicate set in inverse. The inverse is used as a indicator for the
 active place for the player&lt;/li&gt;
&lt;li&gt;S$(4): The solution&lt;/li&gt;
&lt;li&gt;G$(4): Player guess&lt;/li&gt;
&lt;li&gt;O$(4): Temp for scoring player guess&lt;/li&gt;
&lt;li&gt;A$(4): Holds how the player did with their guess&lt;/li&gt;
&lt;li&gt;H$(1),D$(1),M$(1),B$(1): To save a character in the lines&lt;/li&gt;
&lt;li&gt;C$="!#$%&amp;amp;@INVERSE": The characters used for the code&lt;/li&gt;
&lt;li&gt;H$="*":D$=".":M$="O":B$=" ": Used to save characters in the solve
 procedure&lt;/li&gt;
&lt;li&gt;Y=1: What row are we working on&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Line 20&lt;/h2&gt;
&lt;p&gt;&lt;img alt="20.png (640×73)" src="http://cdn.gtia.com/gozmind/20.png" /&gt;&lt;/p&gt;
&lt;p&gt;This is my favorite line of the program. To create a random code to
guess, the program randomly picks a number from 0 to 1295. Why 1295?
That is 5555 is base 6. We have 6 codes from which to select, so we
want to use base 6. Once a random number is selected, it is converted to
base 6. Since strings in Atari Basic start with one, we have to add one
to each character. Each digit is converted to a string and then place in
S$. The graphics mode is selected and GOZMIND is printed at the top.&lt;/p&gt;
&lt;h2&gt;Line 30&lt;/h2&gt;
&lt;p&gt;&lt;img alt="30.png (640×54)" src="http://cdn.gtia.com/gozmind/30.png" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;G$="7777":C=1:G=VAL(G$(C,C)):LC=C:A$="....": Sets up the start for the&lt;/li&gt;
&lt;li&gt;player. C is the current character the player is working on.&lt;/li&gt;
&lt;li&gt;REPEAT :PAUSE 5:&lt;/li&gt;
&lt;li&gt;EXEC S2S: Convert G$ to the characters of the code and store in O$&lt;/li&gt;
&lt;li&gt;POSITION 5,Y:? #6;O$;"  ";A$: Print the current guess (O$). A$ will be
the what characters are right, once the player makes a complete guess. &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Line 40 &amp;amp; 50&lt;/h2&gt;
&lt;p&gt;&lt;img alt="40.png (640×55)" src="http://cdn.gtia.com/gozmind/40.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="50.png (640×67)" src="http://cdn.gtia.com/gozmind/50.png" /&gt;&lt;/p&gt;
&lt;p&gt;Reads the joystick, and adjusts the variables related to the current
code and position. If statements are used to keep the values in range.
It adjusts the character in G$ depending on what the player has
selected. The repeat loop is waiting for a guess in all 4 slots and for
the player to push the button. Once satisfied, execute the SOLVE
procedure.&lt;/p&gt;
&lt;h2&gt;Line 60&lt;/h2&gt;
&lt;p&gt;&lt;img alt="60.png (640×53)" src="http://cdn.gtia.com/gozmind/60.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="70.png (640×54)" src="http://cdn.gtia.com/gozmind/70.png" /&gt;&lt;/p&gt;
&lt;p&gt;Prints how well the player did on the right side of the screen. It them
increments Y to go to the next row and checks to see if the player has
solved the puzzle yet or if the player has exhausted all 10 tries. If
the game has ended, wait until the player to press the button to start a
new game. Else, continue playing.&lt;/p&gt;
&lt;h2&gt;Line 80 PROC S2S&lt;/h2&gt;
&lt;p&gt;&lt;img alt="80.png (640×53)" src="http://cdn.gtia.com/gozmind/80.png" /&gt;&lt;/p&gt;
&lt;p&gt;Converts the numbers in G$ to the characters to print on the screen. The
computer only deals with numbers, but we need to covert to characters
for the player.&lt;/p&gt;
&lt;h2&gt;Line 90 &amp;amp; 100 PROC SOLVE&lt;/h2&gt;
&lt;p&gt;&lt;img alt="90.png (640×54)" src="http://cdn.gtia.com/gozmind/90.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="100.png (640×54)" src="http://cdn.gtia.com/gozmind/100.png" /&gt;&lt;/p&gt;
&lt;p&gt;The toughest code to write. O$ is a copy of the solution, because we are
going to destroy the variable as we go. First it finds out which character selected
by the player is correct and in the correct place. The for loop goes
through each character of the solution, and checks for a match in the
players guess. If there is a correct guess, the current position of A$
is set to * and the position has one added. We then set that position in
O$ to a . and in the guess to space so it doesn't match any further.&lt;/p&gt;
&lt;p&gt;The code then goes through the solution one character at a time and
checks for the right character just in the wrong position. This time, if
there is a match, it is added as an O to A$.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">gozar</dc:creator><pubDate>Tue, 18 Feb 2014 20:10:00 +0100</pubDate><guid>tag:gtia.com,2014-02-18:2014/02/18/gozmind-my-10-liner-for-the-nomam-2014-competition/</guid><category>contest</category><category>tbxl</category></item><item><title>Ready</title><link>http://gtia.com/2014/01/13/ready/</link><description>&lt;h1&gt;Ready&lt;/h1&gt;
&lt;p&gt;This is a test.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">gozar</dc:creator><pubDate>Mon, 13 Jan 2014 22:07:00 +0100</pubDate><guid>tag:gtia.com,2014-01-13:2014/01/13/ready/</guid><category>ready</category></item></channel></rss>